name: Push to ECR
description: Push to ECR with digest tag
inputs:
  aws-assume-role-arn:
    description: Assume Role ARN
    required: true
  aws-region:
    description: AWS Region
    required: true
  image:
    description: Image name
    required: true
  src-tag:
    description: Source image tag
    required: true
    default: latest
  dest-tag:
    description: Destination image tag
    required: true
  push-digest-tag:
    description: Push also digest tag (default: true)
    required: true
    default: "true"
  push-multi-level-tags:
    description: If true, create tags by repeatedly removing the dot and following from the dest-tag
    required: true
    default: "false"
runs:
  using: composite
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws-assume-role-arn }}
        aws-region: ${{ inputs.aws-region }}
    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    - name: Push digest
      if: inputs.push-digest-tag == 'true'
      shell: bash
      run: |
        digest=${GITHUB_SHA::8}
        docker tag \
          ${{ inputs.image }}:${{ inputs.src-tag }} \
          ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image }}:${digest}
        docker push \
          ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image }}:${digest}
    - name: Push
      shell: bash
      run: |
        TAG=${{ inputs.dest-tag }}
        while [ -n "${TAG}" ]; do
          docker tag \
            ${{ inputs.image }}:${{ inputs.src-tag }} \
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image }}:"${TAG}"
          docker push \
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image }}:"${TAG}"

          if [ ${{ inputs.push-multi-level-tags }} == "false" ]; then
            break
          fi
          if [[ "${TAG}" == *-* ]]; then
            break
          fi
          TRIMMED_TAG="${TAG%.*}"
          if [ "${TAG}" == "${TRIMMED_TAG}" ]; then
            break
          fi
          TAG="${TRIMMED_TAG}"
        done
